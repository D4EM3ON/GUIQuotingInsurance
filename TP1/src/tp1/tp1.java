/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package tp1;

//import com.formdev.flatlaf.FlatDarkLaf;
import com.formdev.flatlaf.FlatDarkLaf;
import java.awt.BorderLayout;
import java.awt.CardLayout;
import java.awt.Color;
import java.io.IOException;
import java.text.NumberFormat;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashSet;
import java.util.Locale;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Pattern;
import javax.swing.BorderFactory;
import javax.swing.ButtonGroup;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JCheckBox;
import javax.swing.JComboBox;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTextField;

/**
 *
 * @author 202127521
 */
public class tp1 extends javax.swing.JFrame {

    /**
     * Creates new form tp1
     */
    private static final String EMAIL_PATTERN = "^[_A-Za-z0-9-\\+]+(\\.[_A-Za-z0-9-]+)*@[A-Za-z0-9-]+(\\.[A-Za-z0-9]+)+$";
    private static final Pattern DATE_PATTERN = Pattern.compile("^((2000|2400|2800|(19|2[0-9])(0[48]|[2468][048]|[13579][26]))-02-29)$" + "|^(((19|2[0-9])[0-9]{2})-02-(0[1-9]|1[0-9]|2[0-8]))$" + "|^(((19|2[0-9])[0-9]{2})-(0[13578]|10|12)-(0[1-9]|[12][0-9]|3[01]))$" + "|^(((19|2[0-9])[0-9]{2})-(0[469]|11)-(0[1-9]|[12][0-9]|30))$");
    private static final String PHONE_PATTERN = "^\\d{3}-\\d{3}-\\d{4}$";
    private final Color red = new Color(255,0,0);
    private final Color black = new Color(0,0,0);
    private final Color white = new Color(255,255,255);
    private ArrayList<ButtonGroup> buttonGroup;
    private CardLayout cl;
    private boolean specialConditions = false;
    private ArrayList<JCheckBox> checkGroup;
    private Voitures voitures;
    private Conducteur conducteur;
    private char yes = 'Y';
    private char no = 'N';
    
    public tp1() {
        voitures = new Voitures();
        this.buttonGroup = new ArrayList<ButtonGroup>();
        initComponents();
        setTitle("Assurance auto - Informations personnelles");
        buttonGroup.add(groupRefuse);
        buttonGroup.add(groupApprenti);
        buttonGroup.add(groupConducteur);
        buttonGroup.add(groupCriminel);
        buttonGroup.add(groupSuspension);
        buttonGroup.add(groupValeur);
        cl = (CardLayout) CardFlipper.getLayout();
        
        checkGroup = new ArrayList<JCheckBox>();
        checkGroup.add(checkAntidemarreur);
        checkGroup.add(checkAntivol);
        checkGroup.add(checkAutre);
        checkGroup.add(checkReperage);
        checkGroup.add(checkSonore);
        checkGroup.add(checkAucun);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        groupConducteur = new javax.swing.ButtonGroup();
        groupSuspension = new javax.swing.ButtonGroup();
        groupCriminel = new javax.swing.ButtonGroup();
        groupApprenti = new javax.swing.ButtonGroup();
        groupValeur = new javax.swing.ButtonGroup();
        groupRefuse = new javax.swing.ButtonGroup();
        groupHabitation = new javax.swing.ButtonGroup();
        CardFlipper = new javax.swing.JPanel();
        infoPersonnelles = new javax.swing.JPanel();
        labelPrenom = new javax.swing.JLabel();
        inputPrenom = new javax.swing.JTextField();
        labelNom = new javax.swing.JLabel();
        inputNom = new javax.swing.JTextField();
        labelSexe = new javax.swing.JLabel();
        inputSexe = new javax.swing.JComboBox<>();
        labelPhone = new javax.swing.JLabel();
        labelEmail = new javax.swing.JLabel();
        inputEmail = new javax.swing.JTextField();
        inputPhone = new javax.swing.JFormattedTextField();
        labelBirthday = new javax.swing.JLabel();
        inputBirthday = new javax.swing.JFormattedTextField();
        labelNumeroCivique = new javax.swing.JLabel();
        inputNumeroCivique = new javax.swing.JFormattedTextField();
        labelRue = new javax.swing.JLabel();
        labelApp = new javax.swing.JLabel();
        inputApp = new javax.swing.JFormattedTextField();
        labelVille = new javax.swing.JLabel();
        labelPostal = new javax.swing.JLabel();
        inputPostal = new javax.swing.JFormattedTextField();
        boutonProchain1 = new javax.swing.JButton();
        inputRue = new javax.swing.JTextField();
        inputVille = new javax.swing.JTextField();
        infoParticulieres = new javax.swing.JPanel();
        radioOuiConducteurs = new javax.swing.JRadioButton();
        radioNonConducteurs = new javax.swing.JRadioButton();
        labelTitre1 = new javax.swing.JLabel();
        labelTitre2 = new javax.swing.JLabel();
        labelConducteurs = new javax.swing.JLabel();
        labelSuspension = new javax.swing.JLabel();
        labelCriminel = new javax.swing.JLabel();
        labelRefuse = new javax.swing.JLabel();
        labelApprenti = new javax.swing.JLabel();
        labelValeur = new javax.swing.JLabel();
        radioSuspensionOui = new javax.swing.JRadioButton();
        radioSuspensionNon = new javax.swing.JRadioButton();
        radioCriminelNon = new javax.swing.JRadioButton();
        radioCriminelOui = new javax.swing.JRadioButton();
        radioRefuseNon = new javax.swing.JRadioButton();
        radioValeurOui = new javax.swing.JRadioButton();
        radioApprentiNon = new javax.swing.JRadioButton();
        radioRefuseOui = new javax.swing.JRadioButton();
        radioValeurNon = new javax.swing.JRadioButton();
        radioApprentiOui = new javax.swing.JRadioButton();
        labelRefuse2 = new javax.swing.JLabel();
        boutonProchain2 = new javax.swing.JButton();
        infoVoitures = new javax.swing.JPanel();
        labelMake = new javax.swing.JLabel();
        comboMake = new javax.swing.JComboBox<>();
        labelModel = new javax.swing.JLabel();
        comboModel = new javax.swing.JComboBox<>();
        labelYear = new javax.swing.JLabel();
        inputYear = new javax.swing.JFormattedTextField();
        labelKm = new javax.swing.JLabel();
        inputKm = new javax.swing.JFormattedTextField();
        labelHabitation = new javax.swing.JLabel();
        radioHabitationNon = new javax.swing.JRadioButton();
        radioHabitationOui = new javax.swing.JRadioButton();
        labelAntivol = new javax.swing.JLabel();
        checkReperage = new javax.swing.JCheckBox();
        checkAntidemarreur = new javax.swing.JCheckBox();
        checkSonore = new javax.swing.JCheckBox();
        checkAntivol = new javax.swing.JCheckBox();
        checkAucun = new javax.swing.JCheckBox();
        checkAutre = new javax.swing.JCheckBox();
        labelAutre = new javax.swing.JLabel();
        inputAutre = new javax.swing.JTextField();
        boutonCalcul = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        CardFlipper.setPreferredSize(new java.awt.Dimension(504, 310));
        CardFlipper.setLayout(new java.awt.CardLayout());

        labelPrenom.setText("Prénom *");
        labelPrenom.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                inputFocusGained(evt);
            }
        });

        inputPrenom.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                inputFocusGained(evt);
            }
        });

        labelNom.setLabelFor(inputNom);
        labelNom.setText("Nom *");
        labelNom.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                inputFocusGained(evt);
            }
        });

        inputNom.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        inputNom.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                inputFocusGained(evt);
            }
        });

        labelSexe.setText("Sexe *");
        labelSexe.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                inputFocusGained(evt);
            }
        });

        inputSexe.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Homme", "Femme", "Non binaire", "Ne préfère pas dire", "Autre" }));

        labelPhone.setText("Numéro de téléphone *");
        labelPhone.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                inputFocusGained(evt);
            }
        });

        labelEmail.setText("Adresse courriel *");
        labelEmail.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                inputFocusGained(evt);
            }
        });

        inputEmail.setToolTipText("johnsmith@example.com");
        inputEmail.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                inputFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                inputEmailFocusLost(evt);
            }
        });

        try {
            inputPhone.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###-###-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        inputPhone.setToolTipText("123-456-9024");
        inputPhone.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                inputFocusGained(evt);
            }
        });

        labelBirthday.setText("Date de naissance *");
        labelBirthday.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                inputFocusGained(evt);
            }
        });

        try {
            inputBirthday.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("####-##-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        inputBirthday.setText("2000-01-01");
        inputBirthday.setToolTipText("AAAA-MM-JJ");
        inputBirthday.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                inputBirthdayFocusLost(evt);
            }
        });

        labelNumeroCivique.setText("Numéro civique *");
        labelNumeroCivique.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                inputFocusGained(evt);
            }
        });

        inputNumeroCivique.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));
        inputNumeroCivique.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                inputFocusGained(evt);
            }
        });

        labelRue.setText("Rue *");
        labelRue.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                inputFocusGained(evt);
            }
        });

        labelApp.setText("Appartement");
        labelApp.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                inputFocusGained(evt);
            }
        });

        inputApp.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));
        inputApp.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                inputFocusGained(evt);
            }
        });

        labelVille.setText("Ville *");
        labelVille.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                inputFocusGained(evt);
            }
        });

        labelPostal.setText("Code postal *");
        labelPostal.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                inputFocusGained(evt);
            }
        });

        try {
            inputPostal.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("U#U #U#")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        inputPostal.setToolTipText("A1A 1A1");
        inputPostal.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                inputFocusGained(evt);
            }
        });

        boutonProchain1.setText("Prochaine étape");
        boutonProchain1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boutonProchain1ActionPerformed(evt);
            }
        });

        inputRue.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                inputFocusGained(evt);
            }
        });

        inputVille.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                inputFocusGained(evt);
            }
        });

        javax.swing.GroupLayout infoPersonnellesLayout = new javax.swing.GroupLayout(infoPersonnelles);
        infoPersonnelles.setLayout(infoPersonnellesLayout);
        infoPersonnellesLayout.setHorizontalGroup(
            infoPersonnellesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(infoPersonnellesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(infoPersonnellesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, infoPersonnellesLayout.createSequentialGroup()
                        .addComponent(inputPrenom)
                        .addGap(18, 18, 18)
                        .addGroup(infoPersonnellesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(inputNom, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelNom)))
                    .addGroup(infoPersonnellesLayout.createSequentialGroup()
                        .addGroup(infoPersonnellesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(inputNumeroCivique)
                            .addComponent(labelNumeroCivique, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(labelApp)
                            .addComponent(inputApp))
                        .addGap(18, 18, 18)
                        .addGroup(infoPersonnellesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, infoPersonnellesLayout.createSequentialGroup()
                                .addGroup(infoPersonnellesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(infoPersonnellesLayout.createSequentialGroup()
                                        .addComponent(labelRue)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addComponent(inputRue, javax.swing.GroupLayout.DEFAULT_SIZE, 102, Short.MAX_VALUE))
                                .addGap(26, 26, 26)
                                .addGroup(infoPersonnellesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(labelBirthday, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(inputBirthday)))
                            .addGroup(infoPersonnellesLayout.createSequentialGroup()
                                .addComponent(labelVille)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(inputVille))
                        .addGap(18, 18, 18)
                        .addGroup(infoPersonnellesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(labelPostal)
                            .addComponent(inputSexe, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(labelSexe)
                            .addComponent(inputPostal)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, infoPersonnellesLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(boutonProchain1))
                    .addGroup(infoPersonnellesLayout.createSequentialGroup()
                        .addGroup(infoPersonnellesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(infoPersonnellesLayout.createSequentialGroup()
                                .addComponent(labelPhone)
                                .addGap(18, 18, 18)
                                .addComponent(labelEmail))
                            .addComponent(labelPrenom))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(infoPersonnellesLayout.createSequentialGroup()
                        .addComponent(inputPhone, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(inputEmail)))
                .addContainerGap())
        );
        infoPersonnellesLayout.setVerticalGroup(
            infoPersonnellesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(infoPersonnellesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(infoPersonnellesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelPrenom)
                    .addComponent(labelNom))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(infoPersonnellesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(inputNom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(inputPrenom, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(infoPersonnellesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelPhone)
                    .addComponent(labelEmail))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(infoPersonnellesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(inputPhone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(inputEmail))
                .addGap(18, 18, 18)
                .addGroup(infoPersonnellesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelSexe)
                    .addComponent(labelBirthday)
                    .addComponent(labelNumeroCivique)
                    .addComponent(labelRue))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(infoPersonnellesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(inputSexe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(inputBirthday)
                    .addComponent(inputNumeroCivique, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(inputRue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(infoPersonnellesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelApp)
                    .addComponent(labelVille)
                    .addComponent(labelPostal))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(infoPersonnellesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(inputApp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(inputPostal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(inputVille, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                .addComponent(boutonProchain1)
                .addGap(15, 15, 15))
        );

        CardFlipper.add(infoPersonnelles, "card2");

        infoParticulieres.setPreferredSize(new java.awt.Dimension(504, 310));

        groupConducteur.add(radioOuiConducteurs);
        radioOuiConducteurs.setMnemonic('Y');
        radioOuiConducteurs.setText("Oui");

        groupConducteur.add(radioNonConducteurs);
        radioNonConducteurs.setMnemonic('N');
        radioNonConducteurs.setText("Non");

        labelTitre1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        labelTitre1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelTitre1.setText("L'une ou l'autre des situations suivantes s'applique-t-elle à vous ou à l'un");

        labelTitre2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        labelTitre2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelTitre2.setText("des conducteurs?");

        labelConducteurs.setText("3 conducteurs/véhicules et plus");

        labelSuspension.setText("Suspension de permis dans les 3 dernières années");

        labelCriminel.setText("L'existence d'un dossier criminel");

        labelRefuse.setText("Police d'assurance auto ou résidentielle résiliée/refusée dans les 5");

        labelApprenti.setText("Conducteur principal détient un permis d'apprenti");

        labelValeur.setText("La valeur de votre véhicule est plus grande ou supérieure à 100,000$");

        groupSuspension.add(radioSuspensionOui);
        radioSuspensionOui.setMnemonic('Y');
        radioSuspensionOui.setText("Oui");

        groupSuspension.add(radioSuspensionNon);
        radioSuspensionNon.setMnemonic('N');
        radioSuspensionNon.setText("Non");

        groupCriminel.add(radioCriminelNon);
        radioCriminelNon.setMnemonic('N');
        radioCriminelNon.setText("Non");

        groupCriminel.add(radioCriminelOui);
        radioCriminelOui.setMnemonic('Y');
        radioCriminelOui.setText("Oui");

        groupRefuse.add(radioRefuseNon);
        radioRefuseNon.setMnemonic('N');
        radioRefuseNon.setText("Non");

        groupValeur.add(radioValeurOui);
        radioValeurOui.setMnemonic('Y');
        radioValeurOui.setText("Oui");

        groupApprenti.add(radioApprentiNon);
        radioApprentiNon.setMnemonic('N');
        radioApprentiNon.setText("Non");

        groupRefuse.add(radioRefuseOui);
        radioRefuseOui.setMnemonic('Y');
        radioRefuseOui.setText("Oui");

        groupValeur.add(radioValeurNon);
        radioValeurNon.setMnemonic('N');
        radioValeurNon.setText("Non");

        groupApprenti.add(radioApprentiOui);
        radioApprentiOui.setMnemonic('Y');
        radioApprentiOui.setText("Oui");

        labelRefuse2.setText("dernières années");

        boutonProchain2.setText("Prochaine étape");
        boutonProchain2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boutonProchain2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout infoParticulieresLayout = new javax.swing.GroupLayout(infoParticulieres);
        infoParticulieres.setLayout(infoParticulieresLayout);
        infoParticulieresLayout.setHorizontalGroup(
            infoParticulieresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(infoParticulieresLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(infoParticulieresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelTitre1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(labelTitre2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 492, Short.MAX_VALUE)
                    .addGroup(infoParticulieresLayout.createSequentialGroup()
                        .addGroup(infoParticulieresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(infoParticulieresLayout.createSequentialGroup()
                                .addComponent(radioOuiConducteurs)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(radioNonConducteurs)
                                .addGap(18, 18, 18)
                                .addComponent(labelConducteurs))
                            .addGroup(infoParticulieresLayout.createSequentialGroup()
                                .addGroup(infoParticulieresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(infoParticulieresLayout.createSequentialGroup()
                                        .addComponent(radioCriminelOui)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(radioCriminelNon))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, infoParticulieresLayout.createSequentialGroup()
                                        .addComponent(radioApprentiOui)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(radioApprentiNon))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, infoParticulieresLayout.createSequentialGroup()
                                        .addComponent(radioValeurOui)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(radioValeurNon))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, infoParticulieresLayout.createSequentialGroup()
                                        .addComponent(radioRefuseOui)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(radioRefuseNon)))
                                .addGap(18, 18, 18)
                                .addGroup(infoParticulieresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(labelValeur)
                                    .addComponent(labelApprenti)
                                    .addComponent(labelCriminel)
                                    .addComponent(labelRefuse)
                                    .addComponent(labelRefuse2)))
                            .addGroup(infoParticulieresLayout.createSequentialGroup()
                                .addComponent(radioSuspensionOui)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(radioSuspensionNon)
                                .addGap(18, 18, 18)
                                .addComponent(labelSuspension)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, infoParticulieresLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(boutonProchain2)))
                .addContainerGap())
        );
        infoParticulieresLayout.setVerticalGroup(
            infoParticulieresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(infoParticulieresLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(labelTitre1)
                .addGap(2, 2, 2)
                .addComponent(labelTitre2)
                .addGap(16, 16, 16)
                .addGroup(infoParticulieresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelConducteurs)
                    .addComponent(radioOuiConducteurs)
                    .addComponent(radioNonConducteurs))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(infoParticulieresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(radioSuspensionNon)
                    .addGroup(infoParticulieresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(labelSuspension)
                        .addComponent(radioSuspensionOui)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(infoParticulieresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(radioCriminelNon)
                    .addComponent(radioCriminelOui)
                    .addComponent(labelCriminel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(infoParticulieresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelApprenti)
                    .addComponent(radioApprentiNon)
                    .addComponent(radioApprentiOui))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(infoParticulieresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelValeur)
                    .addComponent(radioValeurNon)
                    .addComponent(radioValeurOui))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(infoParticulieresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(radioRefuseNon)
                    .addComponent(radioRefuseOui)
                    .addComponent(labelRefuse))
                .addGap(0, 0, 0)
                .addComponent(labelRefuse2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(boutonProchain2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        CardFlipper.add(infoParticulieres, "card3");

        infoVoitures.setPreferredSize(new java.awt.Dimension(504, 310));

        labelMake.setText("Marque *");

        comboMake.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Veuillez choisir..." }));
        comboMake.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                comboFocusGained(evt);
            }
        });
        comboMake.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboMakeActionPerformed(evt);
            }
        });

        labelModel.setText("Modèle *");

        comboModel.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Veuillez choisir..." }));
        comboModel.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                comboFocusGained(evt);
            }
        });

        labelYear.setText("Année *");

        try {
            inputYear.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        inputYear.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                inputFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                inputYearFocusLost(evt);
            }
        });

        labelKm.setText("Kilométrage annuel *");

        inputKm.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("######"))));
        inputKm.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                inputFocusGained(evt);
            }
        });

        labelHabitation.setText("Avez vous une assurance habitation avec nous? *");

        groupHabitation.add(radioHabitationNon);
        radioHabitationNon.setMnemonic('N');
        radioHabitationNon.setText("Non");
        radioHabitationNon.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                radioHabitationNonFocusGained(evt);
            }
        });

        groupHabitation.add(radioHabitationOui);
        radioHabitationOui.setMnemonic('Y');
        radioHabitationOui.setText("Oui");
        radioHabitationOui.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                radioHabitationOuiFocusGained(evt);
            }
        });

        labelAntivol.setText("Sélectionnez les systèmes antivols que vous avez fait installer post-vente: *");

        checkReperage.setText("Système d'alarme de repérage");
        checkReperage.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                checkFocusGained(evt);
            }
        });

        checkAntidemarreur.setText("Antidémarreur");
        checkAntidemarreur.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                checkFocusGained(evt);
            }
        });

        checkSonore.setText("Alarme sonore");
        checkSonore.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                checkFocusGained(evt);
            }
        });

        checkAntivol.setText("Marquage intensif antivol");
        checkAntivol.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                checkFocusGained(evt);
            }
        });

        checkAucun.setText("Aucun");
        checkAucun.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                checkFocusGained(evt);
            }
        });
        checkAucun.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkAucunActionPerformed(evt);
            }
        });

        checkAutre.setText("Autre (SVP décrire)");
        checkAutre.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                checkFocusGained(evt);
            }
        });
        checkAutre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkAutreActionPerformed(evt);
            }
        });

        labelAutre.setText("Autre:");

        inputAutre.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                inputFocusGained(evt);
            }
        });

        boutonCalcul.setText("Calculer ma soumission!");
        boutonCalcul.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boutonCalculActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout infoVoituresLayout = new javax.swing.GroupLayout(infoVoitures);
        infoVoitures.setLayout(infoVoituresLayout);
        infoVoituresLayout.setHorizontalGroup(
            infoVoituresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(infoVoituresLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(infoVoituresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(infoVoituresLayout.createSequentialGroup()
                        .addGroup(infoVoituresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(inputAutre, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(checkReperage, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(checkAntivol, javax.swing.GroupLayout.Alignment.LEADING))
                        .addGap(18, 18, 18)
                        .addGroup(infoVoituresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(checkAntidemarreur)
                            .addComponent(checkAucun))
                        .addGap(18, 18, 18)
                        .addGroup(infoVoituresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(checkAutre)
                            .addComponent(checkSonore)
                            .addComponent(boutonCalcul)))
                    .addComponent(labelAntivol)
                    .addComponent(labelAutre)
                    .addGroup(infoVoituresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(infoVoituresLayout.createSequentialGroup()
                            .addGroup(infoVoituresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(infoVoituresLayout.createSequentialGroup()
                                    .addComponent(labelKm)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGroup(infoVoituresLayout.createSequentialGroup()
                                    .addComponent(inputKm)
                                    .addGap(46, 46, 46)))
                            .addGroup(infoVoituresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, infoVoituresLayout.createSequentialGroup()
                                    .addComponent(radioHabitationOui)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(radioHabitationNon)
                                    .addGap(19, 19, 19))
                                .addComponent(labelHabitation, javax.swing.GroupLayout.Alignment.TRAILING)))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, infoVoituresLayout.createSequentialGroup()
                            .addGroup(infoVoituresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(labelMake)
                                .addComponent(comboMake, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(18, 18, 18)
                            .addGroup(infoVoituresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(comboModel, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(labelModel))
                            .addGap(18, 18, 18)
                            .addGroup(infoVoituresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(labelYear)
                                .addComponent(inputYear, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(21, 21, 21))
        );
        infoVoituresLayout.setVerticalGroup(
            infoVoituresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(infoVoituresLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(infoVoituresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelMake)
                    .addComponent(labelModel)
                    .addComponent(labelYear))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(infoVoituresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(inputYear, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(infoVoituresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(comboMake, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(comboModel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(infoVoituresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelKm)
                    .addComponent(labelHabitation))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(infoVoituresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(inputKm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(radioHabitationNon)
                    .addComponent(radioHabitationOui))
                .addGap(18, 18, 18)
                .addComponent(labelAntivol)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(infoVoituresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(checkReperage)
                    .addComponent(checkAntidemarreur)
                    .addComponent(checkSonore))
                .addGap(18, 18, 18)
                .addGroup(infoVoituresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(checkAntivol)
                    .addComponent(checkAucun)
                    .addComponent(checkAutre))
                .addGap(18, 18, 18)
                .addComponent(labelAutre)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(infoVoituresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(inputAutre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(boutonCalcul))
                .addContainerGap(37, Short.MAX_VALUE))
        );

        CardFlipper.add(infoVoitures, "card4");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(CardFlipper, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(CardFlipper, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void boutonProchain1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boutonProchain1ActionPerformed
        // check if the form is filled, and filled well
        if (this.inputEmail.getText().matches(EMAIL_PATTERN) && !inputBirthday.getText().isEmpty() && !inputNom.getText().isEmpty() && !inputNumeroCivique.getText().isEmpty() && inputPhone.getText().matches(PHONE_PATTERN)&& !inputPostal.getText().isEmpty() && !inputPrenom.getText().isEmpty() && !inputRue.getText().isEmpty() && !inputVille.getText().isEmpty()){
            this.cl.next(CardFlipper);
            this.setTitle("Assurance auto - Informations particulières");
            conducteur = new Conducteur(this.inputPrenom.getText(), this.inputNom.getText(), this.inputSexe.getSelectedItem().toString(), this.inputPhone.getText(), this.inputBirthday.getValue().toString());
            conducteur.setCourriel(this.inputEmail.getText());
            conducteur.setAdresse(this.inputNumeroCivique.getText(), this.inputRue.getText(), this.inputApp.getText(), this.inputVille.getText(), this.inputPostal.getText());
        }
        else {
            if (!this.inputEmail.getText().matches(EMAIL_PATTERN))inputEmail.setBorder(BorderFactory.createLineBorder(red)); 
            if (inputBirthday.getText().isEmpty()) inputBirthday.setBorder(BorderFactory.createLineBorder(red)); 
            if (inputNom.getText().isEmpty()) inputNom.setBorder(BorderFactory.createLineBorder(red)); 
            if (inputNumeroCivique.getText().isEmpty()) inputNumeroCivique.setBorder(BorderFactory.createLineBorder(red)); 
            if (!inputPhone.getText().matches(PHONE_PATTERN)) inputPhone.setBorder(BorderFactory.createLineBorder(red)); 
            if (inputPrenom.getText().isEmpty()) inputPrenom.setBorder(BorderFactory.createLineBorder(red)); 
            if (inputPostal.getText().isEmpty()) inputPostal.setBorder(BorderFactory.createLineBorder(red)); 
            if (inputRue.getText().isEmpty()) inputRue.setBorder(BorderFactory.createLineBorder(red));
            if (inputVille.getText().isEmpty()) inputVille.setBorder(BorderFactory.createLineBorder(red));
            JOptionPane.showMessageDialog(null, "SVP remplir tous les champs requis par un astérisque.","Il y a des champs requis qui ne sont pas remplis!", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_boutonProchain1ActionPerformed

    private void inputFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_inputFocusGained
        JTextField input = (JTextField) evt.getComponent();
        input.setBorder(new JTextField().getBorder());
        
        input.setSize(input.getWidth(), 22);
    }//GEN-LAST:event_inputFocusGained

    private void boutonProchain2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boutonProchain2ActionPerformed
        for (int i = 0; i < 6; i++){
            if (buttonGroup.get(i).getSelection().getMnemonic() == this.yes) this.specialConditions = true;
            if (buttonGroup.get(i).getSelection() == null) {
                JOptionPane.showMessageDialog(this, "SVP répondre à toutes les questions.", "Réponses manquantes", JOptionPane.ERROR_MESSAGE);
                break;
            }
            else{
                this.cl.next(CardFlipper);
                this.setTitle("Assurance auto - Informations sur la voiture");

                this.conducteur.setSpecialConditions(this.specialConditions);
                
                this.comboMake.setModel(new DefaultComboBoxModel(voitures.getToutesLesMarques().toArray()));
                this.comboModel.setModel(new DefaultComboBoxModel(new String[] {"Veuillez choisir..."}));
                this.inputAutre.setEnabled(false);
                
                break;
            }
        }
    }//GEN-LAST:event_boutonProchain2ActionPerformed

    private void checkAutreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkAutreActionPerformed
        if (this.checkAutre.isSelected()) this.inputAutre.setEnabled(true);
        else this.inputAutre.setEnabled(false);
    }//GEN-LAST:event_checkAutreActionPerformed

    private void boutonCalculActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boutonCalculActionPerformed
        boolean makeTrue, modelTrue, yearTrue, kmTrue, habitationTrue, checkTrue, autreTrue;
        makeTrue = modelTrue = yearTrue = kmTrue = habitationTrue = checkTrue = autreTrue = false;
        
        if (this.comboMake.getSelectedItem().toString().equals("Veuillez choisir...")){ this.comboMake.setBorder(BorderFactory.createLineBorder(red)); makeTrue = true;}
        if (this.comboModel.getSelectedItem().toString().equals("Veuillez choisir...")){ this.comboModel.setBorder(BorderFactory.createLineBorder(red)); modelTrue = true;}
        if (this.inputYear.getText().isEmpty() || Integer.parseInt(this.inputYear.getText()) > 2024 || Integer.parseInt(this.inputYear.getText()) < 1886) {this.inputYear.setBorder(BorderFactory.createLineBorder(red)); yearTrue = true;}
        if (this.inputKm.getText().isEmpty()) {this.inputKm.setBorder(BorderFactory.createLineBorder(red)); kmTrue = true;}
        if (!this.radioHabitationOui.isSelected() && !this.radioHabitationNon.isSelected()) {this.labelHabitation.setForeground(red); habitationTrue = true; }
        
        int oneIsSelected = -1;
        int numSelected = 0;
        for (int i = 0; i < 6; i++) { 
            if (checkGroup.get(i).isSelected()){ 
                oneIsSelected = i;
                numSelected++;
            }
        }
        if (oneIsSelected == -1) { this.labelAntivol.setForeground(red); checkTrue = true; }
        
        if (this.checkAutre.isSelected() && this.inputAutre.getText().isEmpty()) { this.inputAutre.setBorder(BorderFactory.createLineBorder(red)); autreTrue = true; }
        
        if (!makeTrue && !modelTrue && !yearTrue && !kmTrue && !habitationTrue && !checkTrue && !autreTrue){
            
            int antivols;
            if (oneIsSelected == 5) { antivols = 0; }
            else { antivols = numSelected; }
            this.conducteur.setAntivols(antivols);
            
            boolean assurance;
            if (this.groupHabitation.getSelection().getMnemonic() == this.yes) assurance = true;
            else assurance = false;
            this.conducteur.setAssuranceHabitation(assurance);
            
            String carMake = this.comboMake.getSelectedItem().toString();
            String carModel = this.comboModel.getSelectedItem().toString();
            this.conducteur.setVoiture(carMake, carModel, this.inputYear.getText().toString(), this.voitures.getPrice(carMake, carModel).toString(), this.inputKm.getText().toString());
            
            NumberFormat formatter = NumberFormat.getCurrencyInstance(Locale.US);
            String priceFormatted = formatter.format((double) conducteur.calculerPrime());
            if (JOptionPane.OK_OPTION == JOptionPane.showConfirmDialog(this, "Votre prime correspond à " + priceFormatted + " par année", "Calcul de votre prime", JOptionPane.OK_CANCEL_OPTION, JOptionPane.INFORMATION_MESSAGE)){
		Runtime runtime = Runtime.getRuntime();
                String command = "C:\\Windows\\notepad.exe " + conducteur.getPathName();
                try {
                    Process process = runtime.exec(command);
                } catch (IOException ex) {
                    System.out.println("Error with running the command");
                }

		System.exit(0);
            }
        }
        else { JOptionPane.showMessageDialog(this, "SVP répondre à toutes les questions.", "Réponses manquantes", JOptionPane.ERROR_MESSAGE); }
    }//GEN-LAST:event_boutonCalculActionPerformed

    private void checkAucunActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkAucunActionPerformed
        boolean isAucun = true;
        if (this.checkAucun.isSelected()){ isAucun = false; }
        for (int i = 0; i < 5; i++){
            
            if (!this.checkGroup.get(i).getText().equals("Autre")) { 
                this.checkGroup.get(i).setEnabled(isAucun); 
                this.checkGroup.get(i).setSelected(false); 
                this.inputAutre.setEnabled(false);
            }
        }
    }//GEN-LAST:event_checkAucunActionPerformed

    private void radioHabitationOuiFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_radioHabitationOuiFocusGained
        this.labelHabitation.setForeground(new JLabel().getForeground());
    }//GEN-LAST:event_radioHabitationOuiFocusGained

    private void radioHabitationNonFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_radioHabitationNonFocusGained
        this.labelHabitation.setForeground(new JLabel().getForeground());
    }//GEN-LAST:event_radioHabitationNonFocusGained

    private void comboMakeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboMakeActionPerformed
        if (this.comboMake.getSelectedIndex() != 0) {
            ArrayList<String> keys = new ArrayList<String>(voitures.getMapMakeModel().get(this.comboMake.getSelectedItem()).keySet());
            keys.add(0, "Veuillez choisir...");
            this.comboModel.setModel(new DefaultComboBoxModel(keys.toArray()));
        }
    }//GEN-LAST:event_comboMakeActionPerformed

    private void checkFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_checkFocusGained
        this.labelAntivol.setForeground(new JLabel().getForeground());
    }//GEN-LAST:event_checkFocusGained

    private void comboFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_comboFocusGained
        JComboBox input = (JComboBox) evt.getComponent();
        input.setBorder(new JComboBox().getBorder());
    }//GEN-LAST:event_comboFocusGained

    private void inputEmailFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_inputEmailFocusLost
        if (!this.inputEmail.getText().matches(EMAIL_PATTERN)){
            this.inputEmail.setForeground(this.red);
        }
        else {this.inputEmail.setForeground(new JLabel().getForeground());}
    }//GEN-LAST:event_inputEmailFocusLost

    private void inputYearFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_inputYearFocusLost
        if (!this.inputYear.getText().isEmpty() && (Integer.parseInt(this.inputYear.getText()) > 2024 || Integer.parseInt(this.inputYear.getText()) < 1886)) {
            this.inputYear.setForeground(red);
        }
        else this.inputYear.setForeground(new JLabel().getForeground());
    }//GEN-LAST:event_inputYearFocusLost

    private void inputBirthdayFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_inputBirthdayFocusLost
        if (!DATE_PATTERN.matcher(this.inputBirthday.getText()).matches()) {
            this.inputBirthday.setForeground(this.red);
        }
        else {this.inputBirthday.setForeground(new JLabel().getForeground()); }
    }//GEN-LAST:event_inputBirthdayFocusLost

    private String calculPrime(){
        return "";
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(tp1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(tp1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(tp1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(tp1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                FlatDarkLaf.setup();

                new tp1().setVisible(true);   
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel CardFlipper;
    private javax.swing.JButton boutonCalcul;
    private javax.swing.JButton boutonProchain1;
    private javax.swing.JButton boutonProchain2;
    private javax.swing.JCheckBox checkAntidemarreur;
    private javax.swing.JCheckBox checkAntivol;
    private javax.swing.JCheckBox checkAucun;
    private javax.swing.JCheckBox checkAutre;
    private javax.swing.JCheckBox checkReperage;
    private javax.swing.JCheckBox checkSonore;
    private javax.swing.JComboBox<String> comboMake;
    private javax.swing.JComboBox<String> comboModel;
    private javax.swing.ButtonGroup groupApprenti;
    private javax.swing.ButtonGroup groupConducteur;
    private javax.swing.ButtonGroup groupCriminel;
    private javax.swing.ButtonGroup groupHabitation;
    private javax.swing.ButtonGroup groupRefuse;
    private javax.swing.ButtonGroup groupSuspension;
    private javax.swing.ButtonGroup groupValeur;
    private javax.swing.JPanel infoParticulieres;
    private javax.swing.JPanel infoPersonnelles;
    private javax.swing.JPanel infoVoitures;
    private javax.swing.JFormattedTextField inputApp;
    private javax.swing.JTextField inputAutre;
    private javax.swing.JFormattedTextField inputBirthday;
    private javax.swing.JTextField inputEmail;
    private javax.swing.JFormattedTextField inputKm;
    private javax.swing.JTextField inputNom;
    private javax.swing.JFormattedTextField inputNumeroCivique;
    private javax.swing.JFormattedTextField inputPhone;
    private javax.swing.JFormattedTextField inputPostal;
    private javax.swing.JTextField inputPrenom;
    private javax.swing.JTextField inputRue;
    private javax.swing.JComboBox<String> inputSexe;
    private javax.swing.JTextField inputVille;
    private javax.swing.JFormattedTextField inputYear;
    private javax.swing.JLabel labelAntivol;
    private javax.swing.JLabel labelApp;
    private javax.swing.JLabel labelApprenti;
    private javax.swing.JLabel labelAutre;
    private javax.swing.JLabel labelBirthday;
    private javax.swing.JLabel labelConducteurs;
    private javax.swing.JLabel labelCriminel;
    private javax.swing.JLabel labelEmail;
    private javax.swing.JLabel labelHabitation;
    private javax.swing.JLabel labelKm;
    private javax.swing.JLabel labelMake;
    private javax.swing.JLabel labelModel;
    private javax.swing.JLabel labelNom;
    private javax.swing.JLabel labelNumeroCivique;
    private javax.swing.JLabel labelPhone;
    private javax.swing.JLabel labelPostal;
    private javax.swing.JLabel labelPrenom;
    private javax.swing.JLabel labelRefuse;
    private javax.swing.JLabel labelRefuse2;
    private javax.swing.JLabel labelRue;
    private javax.swing.JLabel labelSexe;
    private javax.swing.JLabel labelSuspension;
    private javax.swing.JLabel labelTitre1;
    private javax.swing.JLabel labelTitre2;
    private javax.swing.JLabel labelValeur;
    private javax.swing.JLabel labelVille;
    private javax.swing.JLabel labelYear;
    private javax.swing.JRadioButton radioApprentiNon;
    private javax.swing.JRadioButton radioApprentiOui;
    private javax.swing.JRadioButton radioCriminelNon;
    private javax.swing.JRadioButton radioCriminelOui;
    private javax.swing.JRadioButton radioHabitationNon;
    private javax.swing.JRadioButton radioHabitationOui;
    private javax.swing.JRadioButton radioNonConducteurs;
    private javax.swing.JRadioButton radioOuiConducteurs;
    private javax.swing.JRadioButton radioRefuseNon;
    private javax.swing.JRadioButton radioRefuseOui;
    private javax.swing.JRadioButton radioSuspensionNon;
    private javax.swing.JRadioButton radioSuspensionOui;
    private javax.swing.JRadioButton radioValeurNon;
    private javax.swing.JRadioButton radioValeurOui;
    // End of variables declaration//GEN-END:variables
}
